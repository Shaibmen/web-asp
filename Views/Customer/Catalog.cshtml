@model IEnumerable<WEbAPi.Models.Catalog>

<h2>Каталог товаров</h2>

<form method="get" class="mb-4">
    <div class="input-group">
        <input type="text" name="searchQuery" class="form-control" placeholder="Поиск..." />
        
        <select name="category" class="form-control">
            <option value="">Все категории</option>
            @if (ViewBag.Categories is List<WEbAPi.Models.Category> categories)
            {
                foreach (var category in categories)
                {
                    <option value="@category.CategoryName">@category.CategoryName</option>
                }
            }
        </select>

        <select name="sortBy" class="form-control">
            <option value="price_asc">По возрастанию цены</option>
            <option value="price_desc">По убыванию цены</option>
        </select>

        <div class="input-group-append">
            <button type="submit" class="btn btn-primary">Подтвердить</button>
        </div>
    </div>
</form>

@if (Model != null && Model.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Название</th>
                <th>Автор</th>
                <th>Цена</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model)
            {
                if (product != null)
                {
                    <tr>
                        <td>@product.Title</td>
                        <td>@product.Author</td>
                        <td>@product.Price</td>
                        <td>
                            <a href="@Url.Action("ProductDetails", "Customer", new { id = product.CatalogsId })" class="btn btn-info">Подробнее</a>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="4">
                            @if (User.Identity.IsAuthenticated)
                            {
                                @Html.Partial("_AddReviewPartial", new WEbAPi.Models.ReviewFormModel { ProductId = product.CatalogsId })
                            }
                            else
                            {
                                <p>Для добавления отзыва необходимо авторизоваться.</p>
                            }

                            @await Component.InvokeAsync("AverageRating", new { productId = product.CatalogsId })
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}
else
{
    <p>Нет доступных товаров.</p>
}
